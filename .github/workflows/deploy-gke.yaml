on:
  push:
    branches: [main]
    paths:
      - 'k8s/**'
      - 'Dockerfile'
      - '.github/workflows/deploy-gke.yaml'
name: Deploy to GKE
concurrency:
  group: deploy-gke-${{ github.ref }}
  cancel-in-progress: true

env:
  GKE_CLUSTER: srel-cluster
  GKE_ZONE: us-east1-b
  AR_REPO: sr-eng-docker

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
          service_account: "github-actions-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Configure Docker for AR
        run: gcloud auth configure-docker us-east1-docker.pkg.dev --quiet

      - name: Build & Push Docker Image
        run: |
          IMAGE_URI=us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.AR_REPO }}/syllo-nginx:${{ github.sha }}
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Apply K8s Manifests
        run: |
          kubectl apply -f k8s/
          # Get the real container name from the deployment
          CONTAINER=$(kubectl get deploy demo-nginx -o jsonpath='{.spec.template.spec.containers[0].name}')
          echo "Updating container: $CONTAINER"
          kubectl set image deploy/demo-nginx $CONTAINER=$IMAGE_URI
          kubectl rollout status deploy/demo-nginx
